// <auto-generated />
using System;
using Coursera.DBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Coursera.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230322005257_Migration2")]
    partial class Migration2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Coursera.Models.CourseET", b =>
                {
                    b.Property<int>("CourseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseID"));

                    b.Property<int>("CourseCapacity")
                        .HasColumnType("int");

                    b.Property<string>("CourseDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CourseName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CourseTeacher")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Course_TeacherTeacherid")
                        .HasColumnType("int");

                    b.HasKey("CourseID");

                    b.HasIndex("Course_TeacherTeacherid");

                    b.ToTable("CourseET");
                });

            modelBuilder.Entity("Coursera.Models.Student_Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseId"));

                    b.Property<int?>("Course_idCourseID")
                        .HasColumnType("int");

                    b.Property<int?>("Student_idStudentid")
                        .HasColumnType("int");

                    b.Property<int>("Studentid")
                        .HasColumnType("int");

                    b.HasKey("CourseId");

                    b.HasIndex("Course_idCourseID");

                    b.HasIndex("Student_idStudentid");

                    b.ToTable("Student_Courses");
                });

            modelBuilder.Entity("Coursera.Models.StudentsET", b =>
                {
                    b.Property<int>("Studentid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Studentid"));

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentAge")
                        .HasColumnType("int");

                    b.Property<string>("StudentEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentFirstname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentLastname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentPhone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Studentid");

                    b.ToTable("StudentsET");

                    b.HasData(
                        new
                        {
                            Studentid = 1,
                            Gender = "Male",
                            Password = "01227007298",
                            StudentAge = 21,
                            StudentEmail = "mahmoudmatar49@gmail.com",
                            StudentFirstname = "mahmoud",
                            StudentLastname = "Matar",
                            StudentPhone = "01128673348"
                        },
                        new
                        {
                            Studentid = 2,
                            Gender = "Male",
                            Password = "01111614941",
                            StudentAge = 20,
                            StudentEmail = "Ziad12@yahoo.com",
                            StudentFirstname = "Ziad",
                            StudentLastname = "ElSadany",
                            StudentPhone = "01003246344"
                        });
                });

            modelBuilder.Entity("Coursera.Models.TeacherET", b =>
                {
                    b.Property<int>("Teacherid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Teacherid"));

                    b.Property<int>("TeacherAge")
                        .HasColumnType("int");

                    b.Property<string>("TeacherEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeacherGender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeacherPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Teacherphone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Teacherid");

                    b.ToTable("TeacherET");
                });

            modelBuilder.Entity("Coursera.Models.CourseET", b =>
                {
                    b.HasOne("Coursera.Models.TeacherET", "Course_Teacher")
                        .WithMany()
                        .HasForeignKey("Course_TeacherTeacherid");

                    b.Navigation("Course_Teacher");
                });

            modelBuilder.Entity("Coursera.Models.Student_Course", b =>
                {
                    b.HasOne("Coursera.Models.CourseET", "Course_id")
                        .WithMany()
                        .HasForeignKey("Course_idCourseID");

                    b.HasOne("Coursera.Models.StudentsET", "Student_id")
                        .WithMany()
                        .HasForeignKey("Student_idStudentid");

                    b.Navigation("Course_id");

                    b.Navigation("Student_id");
                });
#pragma warning restore 612, 618
        }
    }
}
